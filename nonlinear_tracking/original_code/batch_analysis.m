% Analyse results generated by batch job

num_tests = 1;
num_seeds = 10;

% Create arrays
kiti_mNs_error = zeros(num_tests,num_seeds);
VRPS_mNs_error = zeros(num_tests,num_seeds);

kiti_mospa = zeros(num_tests,num_seeds);
VRPS_mospa = zeros(num_tests,num_seeds);

filt_rmse_pos = zeros(num_tests,num_seeds);
filt_rmse_vel = zeros(num_tests,num_seeds);
kiti_rmse_pos = zeros(num_tests,num_seeds);
kiti_rmse_vel = zeros(num_tests,num_seeds);
VRPS_rmse_pos = zeros(num_tests,num_seeds);
VRPS_rmse_vel = zeros(num_tests,num_seeds);

filt_MAP_rmse_pos = zeros(num_tests,num_seeds);
filt_MAP_rmse_vel = zeros(num_tests,num_seeds);
kiti_MAP_rmse_pos = zeros(num_tests,num_seeds);
kiti_MAP_rmse_vel = zeros(num_tests,num_seeds);
VRPS_MAP_rmse_pos = zeros(num_tests,num_seeds);
VRPS_MAP_rmse_vel = zeros(num_tests,num_seeds);

% Loop through scenarios
for tf = 1:num_tests
    
    % Load results
    load(['batch_testing/VRPFS_scen' num2str(tf) '.mat']);
    
    % Loop through seeds
    for rs = 1:num_seeds
    
        % Evaluate
        [ kiti_mNs, kiti_mospa(tf,rs), kiti_rmse, kiti_MAP_rmse ] = performance_measures( flags, params, results_filter_pts{rs}, times, true_tau, true_intx );
        [ VRPS_mNs, VRPS_mospa(tf,rs), VRPS_rmse, VRPS_MAP_rmse ] = performance_measures( flags, params, results_smoother_pts{rs}, times, true_tau, true_intx );
        kiti_mNs_error(tf, rs) = kiti_mNs - length(true_tau);
        VRPS_mNs_error(tf, rs) = VRPS_mNs - length(true_tau);
        filt_rmse_pos(tf, rs) = results_filt_MMSE_rmse{rs}.pos;
        filt_rmse_vel(tf, rs) = results_filt_MMSE_rmse{rs}.vel;
        kiti_rmse_pos(tf, rs) = kiti_rmse.pos;
        kiti_rmse_vel(tf, rs) = kiti_rmse.vel;
        VRPS_rmse_pos(tf, rs) = VRPS_rmse.pos;
        VRPS_rmse_vel(tf, rs) = VRPS_rmse.vel;
        filt_MAP_rmse_pos(tf, rs) = results_filt_MAP_rmse{rs}.pos;
        filt_MAP_rmse_vel(tf, rs) = results_filt_MAP_rmse{rs}.vel;
        kiti_MAP_rmse_pos(tf, rs) = kiti_MAP_rmse.pos;
        kiti_MAP_rmse_vel(tf, rs) = kiti_MAP_rmse.vel;
        VRPS_MAP_rmse_pos(tf, rs) = VRPS_MAP_rmse.pos;
        VRPS_MAP_rmse_vel(tf, rs) = VRPS_MAP_rmse.vel;
    
    end
    
end

% Calculate average stats
kiti_mn_mNs_error = mean(kiti_mNs_error(:));
VRPS_mn_mNs_error = mean(VRPS_mNs_error(:));

kiti_mn_mospa = mean(kiti_mospa(:));
VRPS_mn_mospa = mean(VRPS_mospa(:));

filt_mn_rmse_pos = mean(filt_rmse_pos(:));
filt_mn_rmse_vel = mean(filt_rmse_vel(:));
kiti_mn_rmse_pos = mean(kiti_rmse_pos(:));
kiti_mn_rmse_vel = mean(kiti_rmse_vel(:));
VRPS_mn_rmse_pos = mean(VRPS_rmse_pos(:));
VRPS_mn_rmse_vel = mean(VRPS_rmse_vel(:));

kiti_mn_MAP_rmse_pos = mean(kiti_MAP_rmse_pos(:));
kiti_mn_MAP_rmse_vel = mean(kiti_MAP_rmse_vel(:));
VRPS_mn_MAP_rmse_pos = mean(VRPS_MAP_rmse_pos(:));
VRPS_mn_MAP_rmse_vel = mean(VRPS_MAP_rmse_vel(:));